---
import '@shikijs/twoslash/style-rich.css';
import '~/styles/mdx.css';

import { format } from 'date-fns';
import type { CollectionEntry } from 'astro:content';
import BaseHeader from '~/components/base-header.astro';
import MainLayout from '~/layouts/main-layout.astro';


export type Props = {
  post: CollectionEntry<'blog'>;
  prevPost?: CollectionEntry<'blog'>;
  nextPost?: CollectionEntry<'blog'>;
};

const { post, prevPost, nextPost } = Astro.props;

const { title, date, year, description } = post.data;
const { Content } = await post.render();

// Extract the first image from the blog post content
let firstImage = null;
const imageRegex = /!\[.*?\]\((.*?)\)/;
const match = post.body.match(imageRegex);
if (match) {
  firstImage = match[1];
  // Convert relative paths to absolute URLs
  if (!firstImage.startsWith('http')) {
    firstImage = new URL(firstImage, Astro.url.origin).toString();
  }
}
---

<MainLayout seo={{ 
  title, 
  description: description || format(new Date(`${date.replace('. ', '/')}/${year}`), 'MMM dd, yyyy'),
  image: firstImage 
}} >
  <BaseHeader title={title} description={description} />
  <div class="text-sm text-second mb-6">
    {format(new Date(`${date.replace('. ', '/')}/${year}`), 'MMM dd, yyyy')}
  </div>
  <article class="mdx prose prose-invert max-w-none mt-14">
    <Content />
  </article>
  <footer class="mt-8">
    <div class="flex justify-between text-sm text-second">
      {prevPost && (
        <a href={`/blog/${prevPost.slug}`} class="hover:text-heading">
          ← {prevPost.data.title}
        </a>
      )}
      <span class="flex-1"></span>
      {nextPost && (
        <a href={`/blog/${nextPost.slug}`} class="hover:text-heading">
          {nextPost.data.title} →
        </a>
      )}
    </div>
  </footer>
</MainLayout>